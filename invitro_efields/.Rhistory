TRUE ~ 'error'))
data <- data |> dplyr::mutate('coil_position' = dplyr::case_when(coil_distance < 0 ~ 'bellow',
coil_distance > 0 ~, 'top',
data <- data |>
dplyr::mutate('coil_position' = dplyr::case_when(
coil_distance < 0 ~ 'bellow',
coil_distance > 0 ~ 'top',
TRUE ~ 'error'))
View(data)
ggplot(data = data |> dplyr::filter(mso == 1), aes(x = bt_height, y =  EF_median)) +
facet_grid(cols = vars(coil_position)) +
stat_summary(fun.data = mean_se, geom = "errorbar", alpha = 1, size = 0.5, width = 0.01) +
stat_summary(fun = mean, geom = "point", shape = 21, size = 2, stroke = 0.5) +
labs(x = "Brain tissue's height", y = "Median E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
coord_cartesian(ylim = c(0.55, 0.85)) +
theme_bw()
ggplot(data = data |> dplyr::filter(mso == 1), aes(x = bt_height, y =  EF_median)) +
facet_grid(cols = vars(coil_position)) +
stat_summary(fun.data = mean_se, geom = "errorbar", alpha = 1, size = 0.5, width = 0.01) +
stat_summary(fun = mean, geom = "point", shape = 21, size = 2, stroke = 0.5) +
labs(x = "Brain tissue's height", y = "Median E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
coord_cartesian(ylim = c(0.1, 0.85)) +
theme_bw()
ggplot(data = data |> dplyr::filter(mso == 1), aes(x = bt_height, y =  EF_median)) +
facet_grid(cols = vars(coil_position)) +
stat_summary(fun.data = mean_se, geom = "errorbar", alpha = 1, size = 0.5, width = 0.01) +
stat_summary(fun = mean, geom = "point", shape = 21, size = 2, stroke = 0.5) +
labs(x = "Brain tissue's height", y = "Median E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
coord_cartesian(ylim = c(0.2, 0.85)) +
theme_bw()
# Description ----
# Execute each line of code by pressing "cntrl (=strg) + enter"
library('ProjectTemplate')
# Description ----
# Execute each line of code by pressing "cntrl (=strg) + enter"
library('ProjectTemplate')
load.project()
View(data)
View(data)
# SEARCH 1
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 4
# 1.2. depth of brain tissue in mm
params$bt_depth <- 3
# 1.3. height of brain tissue in mm
params$bt_height <- 0.15
# 2. Petri dish properties
# params["liquid_height"] <- 10 or
params$liquid_height <- 10
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- 65
# 3.2. coil_distance
params$coil_distance <- 1
# Get electric field results ----
search1 <- get_efield(params)
search1
View(search1)
# SEARCH 2
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 3.9885
# 1.2. depth of brain tissue in mm
params$bt_depth <- 3.1463
# 1.3. height of brain tissue in mm
params$bt_height <- 0.15
# 2. Petri dish properties
params$liquid_height <- 2.01 + params$bt_height
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- seq(from = 40, to = 50, by = 1)
# 3.2. coil_distance
params$coil_distance <- -1
# Get electric field results ----
search2 <- get_efield_mso_range(params)
search2
View(search2)
# SEARCH 1
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 4
# 1.2. depth of brain tissue in mm
params$bt_depth <- 3
# 1.3. height of brain tissue in mm
params$bt_height <- 0.15
# 2. Petri dish properties
# params["liquid_height"] <- 10 or
params$liquid_height <- 10
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- 50
# 3.2. coil_distance
params$coil_distance <- 1
# Get electric field results ----
search1 <- get_efield(params)
search1
View(search2)
View(search1)
# SEARCH 2
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 3.9885
# 1.2. depth of brain tissue in mm
params$bt_depth <- 3.1463
# 1.3. height of brain tissue in mm
params$bt_height <- 0.15
# 2. Petri dish properties
params$liquid_height <- 2.01 + params$bt_height
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- seq(from = 30, to = 45, by = 1)
# 3.2. coil_distance
params$coil_distance <- -1
# Get electric field results ----
search2 <- get_efield_mso_range(params)
search2
View(search2)
# Some useful functions ----
str(data)
View(data)
range(data$bt_height)
# Example figures
ggplot(data = data |> dplyr::filter(mso == 1), aes(x = bt_height, y =  EF_median)) +
stat_summary(fun.data = mean_se, geom = "errorbar", alpha = 1, size = 0.5, width = 0.01) +
stat_summary(fun = mean, geom = "point", shape = 21, size = 2, stroke = 0.5) +
labs(x = "Brain tissue's height", y = "Median E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
coord_cartesian(ylim = c(0.55, 0.7)) +
theme_bw()
# Description ----
# Execute each line of code by pressing "cntrl (=strg) + enter"
library('ProjectTemplate')
load.project()
# SEARCH 1
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 3
# 1.2. depth of brain tissue in mm
params$bt_depth <- 2.5
# 1.3. height of brain tissue in mm
params$bt_height <- 0.3
# 2. Petri dish properties
# params["liquid_height"] <- 10 or
params$liquid_height <- 10
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- 50
# 3.2. coil_distance
params$coil_distance <- 1
# Get electric field results ----
search1 <- get_efield(params)
search1
View(search1)
View(search1)
# SEARCH 2
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 3
# 1.2. depth of brain tissue in mm
params$bt_depth <- 2.4
# 1.3. height of brain tissue in mm
params$bt_height <- 0.3
# 2. Petri dish properties
params$liquid_height <- 2.01 + params$bt_height
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- seq(from = 30, to = 45, by = 1)
# 3.2. coil_distance
params$coil_distance <- -1
# Get electric field results ----
search2 <- get_efield_mso_range(params)
search2
View(search2)
# Description ----
# Execute each line of code by pressing "cntrl (=strg) + enter"
library('ProjectTemplate')
load.project()
d <- data |> dplyr::filter(mso >= 40 & mso <= 60)
View(d)
d <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1)
d <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_width == 2.9, bt_depth == 2.3, bt_width == 0.3)
d <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_width == 0.3)
d <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_height == 0.3)
View(get_efield_mso_range)
dat <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_height == 0.3)
params$liquid_height <- 10
params.mso <- 40:60
mso_min <- min(params$mso)
mso_max <- max(params$mso)
d <- data |> dplyr::filter(mso >= mso_min & mso <= mso_max, liquid_height == params$liquid_height)
params <- list()
params$bt_width <- 2.9
params$bt_depth <- 2
params$liquid_height <- 10
params.mso <- 40:60
mso_min <- min(params$mso)
mso_max <- max(params$mso)
params$mso <- 40:60
mso_min <- min(params$mso)
mso_max <- max(params$mso)
dat <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_height == 0.3, liquid_height == 10)
params <- list()
params$bt_width <- 2.9
params$bt_depth <- 2
params$mso <- 40:60
mso_min <- min(params$mso)
mso_max <- max(params$mso)
d <- dat |> dplyr::filter(mso >= mso_min & mso <= mso_max, liquid_height == params$liquid_height)
dat <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_height == 0.3, liquid_height == 10)
params <- list()
params$bt_width <- 2.9
params$bt_depth <- 2
mso_min <- min(params$mso)
x <- dat |>  filter(abs(bt_width - params$bt_width) == min(abs(bt_width - params$bt_width)))
y <- dat |>  filter(abs(bt_depth - params$bt_depth) == min(abs(bt_depth - params$bt_depth)))
results <- data.frame(x)
results <- rbind(results, data.frame(y))
results <- results  %>% dplyr::mutate(across(c('bt_width', 'bt_depth', 'bt_height', starts_with("EF_")), round, 4))
View(results)
View(results)
params <- list()
params$bt_width <- 3.8
params$bt_depth <- 3.1
# Rat
params <- list()
params$bt_width <- 3.8
params$bt_depth <- 3.1
x <- dat |>  filter(abs(bt_width - params$bt_width) == min(abs(bt_width - params$bt_width)))
# Description ----
# Execute each line of code by pressing "cntrl (=strg) + enter"
library('ProjectTemplate')
load.project()
dat <- data |> dplyr::filter(mso >= 40 & mso <= 60, coil_distance == 1, bt_height == 0.3, liquid_height == 10)
# Mouse
params <- list()
params$bt_width <- 2.9
params$bt_depth <- 2
x <- dat |>  filter(abs(bt_width - params$bt_width) == min(abs(bt_width - params$bt_width)))
y <- dat |>  filter(abs(bt_depth - params$bt_depth) == min(abs(bt_depth - params$bt_depth)))
search1 <- data.frame(x)
search1 <- rbind(search1, data.frame(y))
search1 <- search1  %>% dplyr::mutate(across(c('bt_width', 'bt_depth', 'bt_height', starts_with("EF_")), round, 4))
# Rat
params <- list()
params$bt_width <- 3.8
params$bt_depth <- 3.1
x <- dat |>  filter(abs(bt_width - params$bt_width) == min(abs(bt_width - params$bt_width)))
y <- dat |>  filter(abs(bt_depth - params$bt_depth) == min(abs(bt_depth - params$bt_depth)))
search2 <- data.frame(x)
search2 <- rbind(search2, data.frame(y))
search2 <- search2  %>% dplyr::mutate(across(c('bt_width', 'bt_depth', 'bt_height', starts_with("EF_")), round, 4))
View(search1)
search1 <- search1 |> dplyr::filter(bt_width > 2.8)
View(search1)
View(search2)
search2 <- search2 |> dplyr::filter(bt_width > 3.8)
View(search2)
View(search1)
search1 <- search1 |> dplyr::filter(bt_width > 2.8) |> dplyr::mutate('spieces' = "mouse")
View(search1)
search2 <- search2 |> dplyr::filter(bt_width > 3.8) |> dplyr::mutate('spieces' = "rat")
# plot
d <- rbind(search1, search2)
# plot
d <- rbind(search1, search2)
ggplot(data = d, aes(x = mso, y =  EF_mean, fill = spieces)) +
geom_dot() +
labs(x = "Intensity (MSO%)", y = "Mean E-field (V/m)") +
#scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
#coord_cartesian(ylim = c(0.55, 0.7)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_mean, fill = spieces)) +
geom_bar() +
labs(x = "Intensity (MSO%)", y = "Mean E-field (V/m)") +
#scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
#coord_cartesian(ylim = c(0.55, 0.7)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_mean, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Mean E-field (V/m)") +
#scale_x_continuous(breaks = seq(from = 0.15, to = 0.4, by = 0.05)) +
#coord_cartesian(ylim = c(0.55, 0.7)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_mean, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Mean E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(10, 20)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_mean, color = spieces, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Mean E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(10, 20)) +
theme_bw()
str(data)
ggplot(data = d, aes(x = mso, y =  EF_robust_max98, color = spieces, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(10, 20)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max98, color = spieces, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
#coord_cartesian(ylim = c(10, 20)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
#coord_cartesian(ylim = c(10, 20)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_point(aes(x=x, y=y), data=dat, size=50, shape=1, color="gold4") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_point(aes(x=x, y=y), data=dat, size=50, shape=1, color="gold4") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_rect(aes(xmin = 49, xmax = 51, ymin = 20, ymax = 22),
fill = "blue", alpha = 0.1, color = "black") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_rect(aes(xmin = 49, xmax = 51, ymin = 20, ymax = 22),
fill = "blue", alpha = 0.9, color = "black") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_rect(aes(xmin = 49, xmax = 51, ymin = 20, ymax = 22),
fill = NA, alpha = 0.9, color = "black") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_rect(aes(xmin = 49, xmax = 51, ymin = 20.5, ymax = 21.5),
fill = NA, alpha = 0.9, color = "black") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_rect(aes(xmin = 49, xmax = 51, ymin = 20.25, ymax = 21.25),
fill = NA, alpha = 0.9, color = "black") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
geom_rect(aes(xmin = 49.25, xmax = 50.25, ymin = 20.25, ymax = 21.25),
fill = NA, alpha = 0.9, color = "black") +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw()
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces, fill = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none")
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none")
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces)) +
geom_point() +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none") +
scale_color_hue(l=40, c=35)
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces)) +
geom_point() +
scale_color_manual(values=c("#999999", "#56B4E9")) +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none")
# plot
format <- 'png'
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces)) +
geom_point() +
scale_color_manual(values=c("#999999", "#56B4E9")) +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none")
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces)) +
geom_point() +
scale_color_manual(values=c("#999999", "#56B4E9")) +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 1)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none")
ggsave(paste("graphs/f41.", format, sep = ""), plot = last_plot(),
width = 60, height = 65, units = "mm", dpi = 300)
ggsave(paste("graphs/f41.", format, sep = ""), plot = last_plot(),
width = 70, height = 65, units = "mm", dpi = 300)
ggplot(data = d, aes(x = mso, y =  EF_robust_max99, color = spieces)) +
geom_point() +
scale_color_manual(values=c("#999999", "#56B4E9")) +
labs(x = "Intensity (MSO%)", y = "Maximum E-field (V/m)") +
scale_x_continuous(breaks = seq(from = 40, to = 60, by = 2)) +
coord_cartesian(ylim = c(15, 25)) +
theme_bw() +
theme(legend.position = "none")
ggsave(paste("graphs/f41.", format, sep = ""), plot = last_plot(),
width = 70, height = 65, units = "mm", dpi = 300)
# Description ----
# Execute each line of code by pressing "cntrl (=strg) + enter"
library('ProjectTemplate')
load.project()
# SEARCH 1
params <- list()
View(data)
range(data$liquid_height)
View(data)
# SEARCH 1
params <- list()
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 2.5
# 1.2. depth of brain tissue in mm
params$bt_depth <- 2.1
# 1.3. height of brain tissue in mm
params$bt_height <- 0.25
# 2. Petri dish properties
# params["liquid_height"] <- 10 or
params$liquid_height <- 2.26
# 3. Stimulation properties
# 3.1. maximum stimulator intensity stimulation intensity
params$mso <- 65
# 3.2. coil_distance
params$coil_distance <- -3
# Get electric field results ----
search1 <- get_efield(params)
search1
View(data)
74*1.19
library('ProjectTemplate')
load.project()
# SEARCH 2: Petri dish is not completely filled with liquid, as the liquid only covers the OTC.
params <- list()
# Please fill in the details of your experiment below.
# 1. brain tissue properties
# 1.1. width of brain tissue in mm
params$bt_width <- 4
# 1.2. depth of brain tissue in mm
params$bt_depth <- 3
# 1.3. height of brain tissue in mm
params$bt_height <- 0.3
# 2. Petri dish properties
params$liquid_height <- round(2.01 + params$bt_height, 2)
# 3. Stimulation properties
# 3.1. stimulation intensity
params$mso <- 100
# 3.2. coil_distance (negative value: stimulation from below; positive value: Stimulation from top)
params$coil_distance <- -10
# Get electric field results ----
search2 <- get_efield(params)
search2
View(get_efield)
# Get electric field results ----
search2 <- get_efield(params)
search2
View(get_efield_mso_range)
